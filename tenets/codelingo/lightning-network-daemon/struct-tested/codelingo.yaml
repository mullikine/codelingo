funcs:
  - name: newConcat
    type: resolver
    body: |
      function (a, b) {
        return a.concat(b);
      }
  - name: testFile
    type: resolver
    body: |
      function (filename) {
        return filename.split(".")[0] + "_test.go";
      }
  - name: doesNotContain
    type: asserter
    body: |
      function (str, substr) {
        return str.indexOf(substr) == -1
      }
tenets:
  - name: function-tested
    flows:
      codelingo/docs:
        title: Function is tested
        body: |
      codelingo/review:
        comment: This function is untested by any "_test.go" that can be seen. Consider writing a test that exercises its behavior.
    query: |
      import codelingo/ast/go
      go.file(depth = any):
        filename as filename
        doesNotContain(filename, "_test.go")
        go.decls:
          @review comment
          go.func_decl:
            go.ident:
              public == "true"
              name as funcName
      exclude:
        go.file(depth = any):
          filename == testFile(filename)
          go.decls:
            go.func_decl:
              go.ident:
                name == newConcat("Test", funcName)